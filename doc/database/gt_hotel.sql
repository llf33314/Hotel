-- MySQL Script generated by MySQL Workbench
-- Wed Oct 25 18:20:40 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gt_hotel
-- -----------------------------------------------------
-- 客来驿酒店数据库

-- -----------------------------------------------------
-- Schema gt_hotel
--
-- 客来驿酒店数据库
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gt_hotel` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `gt_hotel` ;

-- -----------------------------------------------------
-- Table `gt_hotel`.`t_hotel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_hotel` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `bus_id` INT NOT NULL COMMENT '商家ID 酒店所有者',
  `shop_id` INT NOT NULL COMMENT '门店ID',
  `name` VARCHAR(60) NOT NULL COMMENT '酒店名称',
  `desc` VARCHAR(200) NULL COMMENT '酒店描述		',
  `phone` CHAR(12) NOT NULL COMMENT '酒店负责人 手机号',
  `address` VARCHAR(200) NULL COMMENT '酒店地址		',
  `thumbnail` VARCHAR(300) NULL COMMENT '酒店缩略图 URL 地址',
  `logo` VARCHAR(300) NULL COMMENT '酒店Logo',
  `longitude` DOUBLE NOT NULL,
  `latitude` DOUBLE NOT NULL,
  `mark_modified` INT(1) NOT NULL DEFAULT 0 COMMENT '标记备注 0 启用 1 禁用 2 删除 默认0  可查看 sys_dictionary.dict_type_id=2',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `busId_shopId_index` (`bus_id` ASC, `shop_id` ASC),
  UNIQUE INDEX `shop_id_name_unique` (`shop_id` ASC, `name` ASC)  COMMENT '门店ID+酒店名称唯一索引')
ENGINE = InnoDB
COMMENT = '酒店主表';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_room_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_room_category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL COMMENT '房型名称',
  `room_count` INT NOT NULL DEFAULT 0 COMMENT '房间总数',
  `hotel_id` INT NOT NULL COMMENT '酒店ID',
  `desc` VARCHAR(300) NULL COMMENT '描述',
  `rack_rate` INT NOT NULL DEFAULT 0 COMMENT '门市价',
  `deposit` INT NOT NULL DEFAULT 0 COMMENT '押金',
  `weekend_fare_enable` TINYINT(2) NOT NULL DEFAULT 1 COMMENT '是否开启周末价 0 开启 1 禁用，即显示门市价即可',
  `weekend_fare` INT NOT NULL DEFAULT 0 COMMENT '周末价格',
  `mark_modified` INT NOT NULL DEFAULT 0 COMMENT '是否启用 0 默认开启 1 关闭 2 删除标记',
  `breakfast_enable` TINYINT(2) NOT NULL DEFAULT 1 COMMENT '是否开启早餐券 0 开启 1 关闭',
  `breakfast_quantity` TINYINT(2) NOT NULL DEFAULT 0 COMMENT '早餐数量',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `hotel_id_name_UNIQUE` (`name` ASC, `hotel_id` ASC))
ENGINE = InnoDB
COMMENT = '房型';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_room` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '客房ID',
  `category_id` INT NOT NULL COMMENT '房型ID t_room_category.id',
  `number` CHAR(15) NOT NULL COMMENT '客房编号',
  `floor` CHAR(11) NOT NULL COMMENT '楼层',
  `status` VARCHAR(15) NOT NULL COMMENT '房间状态 字典值 TODO: 后续给出编号  -- 可定义为字典值：在住、空房、脏房、已预订、已锁定、维护   sys_dictionary.dict_type_id=6',
  `mark_modified` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0 正常 1 禁用 2 删除',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `room_num_floor_UNIQUE` (`number` ASC, `floor` ASC)  COMMENT '楼层与房号组合唯一约束',
  INDEX `status_categoryId_index` (`status` ASC, `category_id` ASC))
ENGINE = InnoDB
COMMENT = '房型关联 1 - n 客房信息\n房型的客房数量 对应 客房数';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_file_record`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_file_record` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '文件ID',
  `name` VARCHAR(60) NOT NULL COMMENT '显示文件名称',
  `original_name` VARCHAR(60) NOT NULL COMMENT '文件上传时的原始名称',
  `path` VARCHAR(300) NOT NULL COMMENT '文件路径 例如：/aa/bb/cc/f.txt',
  `module` CHAR(20) NOT NULL COMMENT '模块类型 常量类型定义在后台文件里 — 酒店 客房 ….',
  `reference_id` INT NOT NULL COMMENT '引用ID，如果 module_type = room 即保存 room_id 具体 按业务模块类型 定义 如果，module_type = hotel_thumbnail 即对应酒店的缩略图',
  `mark_modified` TINYINT(2) NOT NULL DEFAULT 0 COMMENT '是否启用 0 默认开启 1 关闭 2 删除标记',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  `sub_module` CHAR(20) NULL COMMENT '子模块',
  PRIMARY KEY (`id`),
  INDEX `module_referenceId_index` (`module` ASC, `reference_id` ASC, `sub_module` ASC))
ENGINE = InnoDB
COMMENT = '文件记录表 — 文件实际存储在 素材库。此表仅做记录';


-- -----------------------------------------------------
-- Table `gt_hotel`.`sys_dictionary_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`sys_dictionary_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dict_type_cn_name` VARCHAR(45) NOT NULL COMMENT '字典类型中文名称(例如：性别)',
  `dict_type_en_name` VARCHAR(45) NOT NULL COMMENT '字典类型英文名称 大写(例如： GENDER)',
  `dict_type_status` INT NOT NULL DEFAULT 0 COMMENT '字典状态：0 使用中(默认) 1 禁用',
  `dict_type_remark` VARCHAR(100) NULL COMMENT '备注说明',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '系统的字典类型表(全局缓存 管理员操作)';


-- -----------------------------------------------------
-- Table `gt_hotel`.`sys_dictionary`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`sys_dictionary` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dict_type_id` INT NOT NULL COMMENT '字典类型ID',
  `dict_code` INT UNSIGNED NOT NULL COMMENT '字典编码(例子: 0 女 1 男  )',
  `dict_cn_name` VARCHAR(45) NOT NULL COMMENT '字典中文名称(例如：男女，比如状态，可以放在字典里，作为查看依据)',
  `dict_en_name` VARCHAR(45) NOT NULL COMMENT '字典英文名称 全大写',
  PRIMARY KEY (`id`),
  INDEX `dictTypeId_dictCode_index` (`dict_type_id` ASC, `dict_code` ASC))
ENGINE = InnoDB
COMMENT = '系统的字典数据表';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_infrastructure_relation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_infrastructure_relation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `infrastructure_id` INT NOT NULL COMMENT '基础设施表',
  `module` CHAR(20) NOT NULL COMMENT '模块类型 冗余参数 酒店 客房 …. hotel room',
  `reference_id` INT NOT NULL COMMENT '引用ID，如果 module_type = room 即保存 room_id 具体 按业务模块类型 定义',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  `display_value` VARCHAR(200) NULL COMMENT '展示值',
  PRIMARY KEY (`id`),
  INDEX `infrastuctureId_module_referenceId_index` (`infrastructure_id` ASC, `module` ASC, `reference_id` ASC))
ENGINE = InnoDB
COMMENT = '基础设施表关系(酒店/房型 关联的基础属性都在这里)';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_hotel_setting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_hotel_setting` (
  `hotel_id` INT NOT NULL COMMENT '酒店ID',
  `pay_mode` INT(1) NOT NULL DEFAULT 0 COMMENT '支付方式(1：在线支付 | 2：到店支付 | 3：1&2)  默认 在线支付',
  `sms_enable` INT(1) NOT NULL DEFAULT 1 COMMENT '是否开启短信通知 默认 1 不开启 0 开启',
  `sms_phone` CHAR(15) NULL COMMENT '接收短信的手机号',
  `notice_enable` INT(1) NOT NULL DEFAULT 1 COMMENT '酒店公告 1 不开启 0 开启',
  `bulletin` VARCHAR(300) NULL COMMENT '公告内容',
  `remnant_room_enable` INT(1) NOT NULL DEFAULT 1 COMMENT '是否显示剩余房间数 默认 1 关闭 0 开启',
  `food_pay_mode` INT(1) NOT NULL DEFAULT 1 COMMENT '餐饮支付方式 1 在线 2 到付 3 在线&到付',
  `reservation_check_out_enable` INT(1) NOT NULL DEFAULT 1 COMMENT '预约退房 0 开启 1 关闭  默认1',
  `reservation_check_out_phone` CHAR(15) NULL COMMENT '预约退房 接收短信的手机号',
  `invoice_categorys` CHAR(20) NULL COMMENT '发票支持的类目 1 办公用品 2 住宿费 3 餐费 4 培训费 5 打球费 6 健身费 存储方式 1,2,3,4,5 or 1,2,3 来自sys_dictionary.dict_type_id = 4',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL COMMENT '最后修改时间',
  PRIMARY KEY (`hotel_id`))
ENGINE = InnoDB
COMMENT = '酒店移动端设置';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_infrastructure`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_infrastructure` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL COMMENT '名称',
  `icon_url` VARCHAR(255) NULL COMMENT '图标地址',
  `module` CHAR(20) NOT NULL COMMENT '模块 hotel 酒店基础设施 room 客房基础设施 字典值 sys_dictionary_type.id=5',
  PRIMARY KEY (`id`),
  INDEX `model_index` (`module` ASC))
ENGINE = InnoDB
COMMENT = '基础设施 包含 酒店 客房';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_activity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `hotel_id` INT NOT NULL COMMENT '酒店ID',
  `activity_num` CHAR(24) NOT NULL COMMENT '活动编号 提供对外显示 ID 格式 前缀 HD+时间戳年月日时分秒毫秒 14位',
  `begin_time` DATETIME NOT NULL COMMENT '活动 开始时间',
  `end_time` DATETIME NOT NULL COMMENT '结束时间',
  `available_time` DATETIME NOT NULL COMMENT '可入住最大时间 活动开始后，预订入住时间 最大有效期。',
  `restriction_enable` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '是否开启限购 0 — 开启  1 不限制  默认1',
  `restriction_number` TINYINT(3) UNSIGNED NULL COMMENT '限购数量 当限购开启 - 限购最少限购1间',
  `show_room_enable` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '是否开启显示房间数 0 是  1 不是 默认 1',
  `number_threshold` TINYINT(3) NULL COMMENT '显示剩余房间数的临界值 当show_room_enable=0 此值不能为空。最大999',
  `activity_rules` TEXT(500) NOT NULL COMMENT '活动规则',
  `publish_status` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '活动发布状态 0 开启 1 未开启 ',
  `mark_modified` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0 正常 1 禁用 2 删除',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `activity_num_UNIQUE` (`activity_num` ASC),
  INDEX `hotelId_acitvityNum_index` (`hotel_id` ASC, `activity_num` ASC))
ENGINE = InnoDB
COMMENT = '活动设置 - 抽出活动公共设置';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_activity_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_activity_detail` (
  `activity_id` INT NOT NULL COMMENT '活动ID',
  `activity_type` TINYINT(1) NOT NULL COMMENT '活动类型 1 特价房 2 钟点房 3 秒杀房 4 团购房',
  `check_in_time` TINYINT(3) NULL COMMENT '当activity=2 , 此项不能为空，入住时长。 单位分钟',
  `check_in_period` DATETIME NULL COMMENT '如果 activity_type=2 钟点房 客人可入住时间段',
  `min_purchase_number` TINYINT(3) NULL COMMENT '如果 activity=4 团购房 规则 最少预订房间数量',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`activity_id`))
ENGINE = InnoDB
COMMENT = '活动详情表 根据活动类型不同整合各个活动所需字段';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_activity_room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_activity_room` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `hotel_id` INT NOT NULL COMMENT '酒店ID',
  `activity_id` INT NOT NULL COMMENT '活动ID',
  `category_id` INT NOT NULL COMMENT '房型ID',
  `category_name` VARCHAR(60) NULL COMMENT '房型名称 冗余参数',
  `room_id` INT NOT NULL COMMENT '客房ID',
  `room_num` CHAR(15) NOT NULL COMMENT '客房编号',    
  `rack_rate` INT NOT NULL COMMENT '门市价',
  `activity_price` INT NOT NULL COMMENT '活动价 单位分 记录',
  `mark_modified` TINYINT(1) NOT NULL COMMENT '状态标记',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  INDEX `activityId_hotelId_categoryId_index` (`hotel_id` ASC, `activity_id` ASC, `category_id` ASC))
ENGINE = InnoDB
COMMENT = '活动与房间关系表';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_room_calendar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_room_calendar` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `hotel_id` INT NOT NULL,
  `category_id` INT NOT NULL COMMENT '房型ID',
  `begin_time` DATETIME NOT NULL COMMENT '开始日期',
  `end_time` DATETIME NOT NULL COMMENT '结束日期',
  `price` INT NOT NULL COMMENT '日历价',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  INDEX `hotelId_categoryId_index` (`category_id` ASC, `hotel_id` ASC))
ENGINE = InnoDB
COMMENT = '客房日历价 — 优先级 第三方协议 > 活动价 > 日历价 > 门市价 & 周末价 ';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_hotel_member_setting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_hotel_member_setting` (
  `hotel_id` INT NOT NULL COMMENT '酒店ID',
  `vip_level` TINYINT(2) NOT NULL DEFAULT 1 COMMENT '会员等级 目前只有4个等级 1,2,3,4',
  `vip_check_out` DATETIME NULL COMMENT '会员 最晚退房时间(需要默认退房时间均为离店当天14点)',
  `free_deposit_enable` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '是否免押金  0 是 1 否',
  PRIMARY KEY (`hotel_id`))
ENGINE = InnoDB
COMMENT = '酒店会员设置';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_room_permanent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_room_permanent` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `category_id` INT NOT NULL,
  `hotel_id` INT NOT NULL COMMENT '酒店ID t_hotel.id',
  `rule_name` VARCHAR(200) NOT NULL COMMENT '规则内容',
  `check_in_day` TINYINT(3) NOT NULL COMMENT '入住天数',
  `discount` INT NOT NULL DEFAULT 1 COMMENT '折扣 默认：1 无折扣(门市价/日历价 * 折扣) = 长包房当天价格',
  `deposit` INT NOT NULL COMMENT '押金',
  `mark_modified` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0 正常 1 禁用 2 删除',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  INDEX `categoryId_hotelId_index` (`category_id` ASC, `hotel_id` ASC))
ENGINE = InnoDB
COMMENT = '客房长包房 长包房押金规则： 如 入住3天 押金按长包房押金收';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_authorization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_authorization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL COMMENT '账号ID',
  `hotel_id` INT NOT NULL COMMENT '酒店ID',
  `function_ids` CHAR(20) NOT NULL COMMENT '功能ID 复数 存储方式：1,2,3,4 代表功能 =1 体现 =2 免押金 =3 修改房价 =4 挂账 来自 sys_dictionary.dict_type_id=3',
  `scan_code_authorization` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '是否已扫码授权 0 是 1 否',
  `mark_modified` INT(1) NOT NULL DEFAULT 0 COMMENT '标记备注 0 启用 1 禁用 2 删除 默认0  可查看 sys_dictionary.dict_type_id=2',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  INDEX `accountId_hotelId_index` (`account_id` ASC, `hotel_id` ASC))
ENGINE = InnoDB
COMMENT = 'ERP 功能授权管理';


-- -----------------------------------------------------
-- Table `gt_hotel`.`t_food`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gt_hotel`.`t_food` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `hotel_id` INT NOT NULL,
  `name` VARCHAR(60) NOT NULL COMMENT '菜品名称',
  `price` INT NOT NULL COMMENT '单价',
  `delivery_time` INT NOT NULL COMMENT '配送时间 单位分钟',
  `food_provides` TINYINT(1) NOT NULL COMMENT '菜品提供方 0 本酒店 1 合作方',
  `food_provides_name` VARCHAR(60) NOT NULL COMMENT '提供方名称 food_provides =0 为酒店名称 =1 则填写合作方名称',
  `order_receive_phone` CHAR(15) NOT NULL COMMENT '新订单接收(短信)手机号',
  `food_image` VARCHAR(255) NULL COMMENT '菜品图片URL',
  `breakfast_enable` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '早餐时段是否提供 0 提供 1 不提供',
  `breakfast_begin` TIME NULL COMMENT '早餐开始时间 (示例: 6:00-10:00)',
  `breakfast_end` TIME NULL COMMENT '早餐结束时间 (示例: 6:00-10:00)',
  `lunch_enable` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '午餐时段是否提供 0 提供 1 不提供',
  `lunch_begin` TIME NULL COMMENT '午餐开始时间 (示例: 6:00-10:00)',
  `lunch_end` TIME NULL COMMENT '午餐结束时间 (示例: 6:00-10:00)',
  `dinner_enable` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '晚餐是否提供 0 是 1 否',
  `dinner_begin` TIME NULL COMMENT '晚餐开始时间',
  `dinner_end` TIME NULL COMMENT '晚餐结束时间',
  `supper_enable` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '宵夜是否提供 0 是 1 否',
  `supper_begin` TIME NULL COMMENT '宵夜开始时间',
  `supper_end` TIME NULL COMMENT '宵夜结束时间',
  `mark_modified` INT(1) NOT NULL DEFAULT 0 COMMENT '标记备注 0 启用 1 禁用 2 删除 默认0  可查看 sys_dictionary.dict_type_id=2',
  `created_by` INT NOT NULL COMMENT '创建者ID',
  `created_at` DATETIME NOT NULL COMMENT '创建时间',
  `updated_by` INT NOT NULL COMMENT '最后修改人 ID',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '菜品';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
