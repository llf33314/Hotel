<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gt.hotel.dao.TOrderDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.gt.hotel.entity.TOrder">
		<id column="id" property="id" />
		<result column="order_num" property="orderNum" />
		<result column="hotel_id" property="hotelId" />
		<result column="bus_id" property="busId" />
		<result column="member_id" property="memberId" />
		<result column="pay_type" property="payType" />
		<result column="pay_status" property="payStatus" />
		<result column="pay_time" property="payTime" />
		<result column="order_status" property="orderStatus" />
		<result column="create_time" property="createTime" />
		<result column="real_price" property="realPrice" />
		<result column="bill_price" property="billPrice" />
		<result column="fb" property="fb" />
		<result column="integral" property="integral" />
		<result column="order_coupons_id" property="orderCouponsId" />
		<result column="receivable_price" property="receivablePrice" />
		<result column="remark" property="remark" />
		<result column="completion_time" property="completionTime" />
		<result column="mark_modified" property="markModified" />
		<result column="created_by" property="createdBy" />
		<result column="created_at" property="createdAt" />
		<result column="updated_by" property="updatedBy" />
		<result column="updated_at" property="updatedAt" />
		<result column="fb_discount" property="fbDiscount" />
		<result column="integral_discount" property="integralDiscount" />
		<result column="refund_amount" property="refundAmount" />
		<result column="refund_reason" property="refundReason" />
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		id, order_num, hotel_id, bus_id, member_id, pay_type, pay_status,
		pay_time, order_status, create_time, real_price, bill_price, fb,
		integral, order_coupons_id, receivable_price, remark, completion_time,
		mark_modified, created_by, created_at, updated_by, updated_at, fb_discount, integral_discount,
		refund_amount, refund_reason 
	</sql>
	<sql id="Base_Column_List_VO">
		t_order.id, t_order.order_num orderNum, t_order.hotel_id hotelId, t_order.bus_id busId, t_order.member_id memberId, t_order.pay_type payType, t_order.pay_status payStatus,
		t_order.pay_time payTime, t_order.order_status orderStatus, t_order.create_time createTime, t_order.real_price realPrice, t_order.bill_price billPrice, t_order.fb,
		t_order.integral, t_order.order_coupons_id orderCouponsId, t_order.receivable_price receivablePrice, t_order.remark, t_order.completion_time completionTime,
		t_order.mark_modified markModified, t_order.created_by createdBy, t_order.created_at createdAt, t_order.updated_by updatedBy, t_order.updated_at updatedAt,
		fb_discount fbDiscount, integral_discount integralDiscount, refund_amount refundAmount, refund_reason refundReason 
	</sql>

	<select id="queryRoomOrder" resultType="com.gt.hotel.vo.HotelBackRoomOrderVo">
		SELECT a.id, a.order_num orderNum, a.hotel_id hotelId, a.bus_id busId, a.member_id memberId, a.pay_type payType, a.pay_status payStatus,
			a.pay_time payTime, a.order_status orderStatus, a.create_time createTime, a.real_price realPrice, a.bill_price billPrice, a.fb,
			a.integral, a.order_coupons_id orderCouponsId, a.receivable_price receivablePrice, a.remark, a.completion_time completionTime,
			a.fb_discount fbDiscount, a.integral_discount integralDiscount, c.coupons_discount couponsDiscount, a.refund_amount refundAmount, 
			b.hotel_name hotelName, b.category_id categoryId, b.category_name categoryName, b.check_in_way checkInWay, b.room_num roomNum,
			b.customer_name customerName, b.customer_id_type customerIdType, b.customer_id_card customerIdCard, 
			b.customer_id_card_image customerIdCardImage, b.customer_phone customerPhone, b.number, 
			b.room_in_time roomInTime, b.room_out_time roomOutTime, b.deposit, b.room_price roomPrice, b.`order_from`,
			b.activity_id activityId, b.rack_rate rackRate, b.guest_type guestType, b.customer_gender customerGender, 
			b.check_standard checkStandard 
		FROM t_order a 
		JOIN t_order_room b ON a.id = b.order_id 
		LEFT JOIN t_order_coupons c ON a.id = c.order_id 
		WHERE a.mark_modified = 0 
		<if test="busid != null">
			AND a.bus_id = #{busid} 
		</if>
		<if test="param.id != null">
			AND a.id = #{param.id} 
		</if>
		<if test="param.memberId != null">
			AND a.member_id = #{param.memberId} 
		</if>
		<if test="param.hotelId != null">
			AND a.hotel_id = #{param.hotelId} 
		</if>
		<if test="param.orderStatus != null">
			AND a.order_status = #{param.orderStatus} 
		</if>
		<if test="param.payStatus != null">
			AND a.pay_status = #{param.payStatus} 
		</if>
		<if test="param.roomInTime != null">
			<![CDATA[ AND b.room_in_time <= #{param.roomInTime} ]]>
		</if>
		<if test="param.roomOutTime != null">
			<![CDATA[ AND b.room_out_time >= #{param.roomOutTime} ]]>
		</if>
		<if test="param.keyword != null">
			AND (b.customer_name = #{param.keyword} OR b.customer_phone = #{param.keyword}) 
		</if>
		ORDER BY a.id DESC
	</select>

	<select id="queryFoodOrder" resultType="com.gt.hotel.vo.HotelBackFoodOrderVo">
		SELECT a.id, a.order_num orderNum, a.hotel_id hotelId, a.bus_id busId, a.member_id memberId, a.pay_type payType, a.pay_status payStatus,
			a.pay_time payTime, a.order_status orderStatus, a.create_time createTime, a.real_price realPrice, a.bill_price billPrice, a.fb,
			a.integral, a.order_coupons_id orderCouponsId, a.receivable_price receivablePrice, a.remark, a.completion_time completionTime,
			d.name hotelName, b.customer_name customerName, b.customer_phone customerPhone, b.room_num roomNum, c.food_provides_name foodProvidesName,
			GROUP_CONCAT(c.food_name) mergedFoodName 
		FROM t_order a 
		JOIN t_order_food b ON a.id = b.order_id 
		LEFT JOIN t_order_food_detail c ON b.id = c.order_food_id 
		JOIN t_hotel d ON d.id = a.hotel_id 
		WHERE a.mark_modified = 0 
		<if test="busid != null">
			AND a.bus_id = #{busid} 
		</if>
		<if test="param.memberId != null">
			AND a.member_id = #{param.memberId} 
		</if>
		<if test="param.hotelId != null">
			AND a.hotel_id = #{param.hotelId} 
		</if>
		<if test="param.orderStatus != null">
			AND a.order_status = #{param.orderStatus} 
		</if>
		<if test="param.payStatus != null">
			AND a.pay_status = #{param.payStatus} 
		</if>
		<if test="param.beginTime != null">
			<![CDATA[ AND a.create_time <= #{param.beginTime} ]]>
		</if>
		<if test="param.endTime != null">
			<![CDATA[ AND a.create_time >= #{param.endTime} ]]>
		</if>
		<if test="param.keyword != null">
			AND (b.customer_name = #{param.keyword} OR b.customer_phone = #{param.keyword}) 
		</if>
		GROUP BY a.id 
	</select> 
	
	<select id="queryRoomOrderOneRooms" resultType="com.gt.hotel.vo.OrderRoomCustomerVo">
		SELECT b.category_id categoryId, c.`name` categoryName, b.id roomId, b.number roomNum 
		FROM t_order_room_customer a 
		JOIN t_room b ON a.room_num = b.number 
		JOIN t_room_category c ON b.category_id = c.id 
		WHERE a.order_id = #{orderId} AND a.mark_modified = 0 AND b.mark_modified = 0 
	</select>
	
	<select id="queryMobileDeposit" resultType="com.gt.hotel.vo.DepositVo">
		SELECT a.id orderId, b.deposit, b.check_out_instructions checkOutInstructions, a.pay_time payTime, IF((a.order_status = 4 AND a.pay_status = 3),0,1) isRefund 
		FROM t_order a 
		JOIN t_order_room b ON a.id = b.order_id 
		WHERE b.deposit_visible = 0 AND a.mark_modified = 0 AND b.mark_modified = 0 AND a.pay_time IS NOT NULL  
		<if test="memberId != null">
			AND a.member_id = #{memberId} 
		</if>
		ORDER BY a.id DESC
	</select>
	
	<select id="checkInOrder" resultType="com.gt.hotel.vo.HotelBackRoomOrderVo">
		SELECT id, order_num 
		FROM t_order 
		WHERE order_status = 4 AND mark_modified = 0 AND member_id = #{memberId}
	</select>
	
	<select id="erpGetBusinessConditions" resultType="com.gt.hotel.vo.BusinessConditionsVo">
		SELECT 
			(SELECT COUNT(b.order_id)  
				FROM t_order a JOIN t_order_room b ON a.id = b.order_id JOIN t_hotel c ON a.hotel_id = c.id 
				WHERE b.room_in_time BETWEEN #{nowStart} AND #{nowEnd} AND a.mark_modified = 0 AND a.bus_id = #{busId} AND c.shop_id = #{shopId}) preAarrived, 
			(SELECT COUNT(a.id)  
				FROM t_order a JOIN t_hotel c ON a.hotel_id = c.id 
				WHERE a.create_time BETWEEN #{nowStart} AND #{nowEnd} AND a.mark_modified = 0 AND a.bus_id = #{busId} AND c.shop_id = #{shopId}) newBooking,
			(SELECT SUM(a.real_price)  
				FROM t_order a JOIN t_hotel c ON a.hotel_id = c.id
				JOIN t_order_room b ON a.id = b.order_id 
				WHERE a.mark_modified = 0 AND a.pay_status = 1 AND a.pay_time BETWEEN #{nowStart} AND #{nowEnd} AND a.bus_id = #{busId} AND c.shop_id = #{shopId}) income;
	</select>
	
	<select id="getTotalRevenue" resultType="com.gt.hotel.entity.TOrder">
		SELECT <include refid="Base_Column_List_VO" />  
		FROM t_order b 
		JOIN t_hotel c ON b.hotel_id = c.id 
		WHERE b.pay_time BETWEEN #{startDate} AND #{endDate} AND b.pay_status = 1 AND b.mark_modified = 0 AND c.shop_id = #{shopId} AND c.bus_id = #{busId};	
	</select>
	
	<select id="getIncomeDetailsByDate" resultType="com.gt.hotel.vo.IncomeDetailsVo">
		SELECT DATE_FORMAT(b.pay_time, '%Y-%m-%d') date, SUM(b.real_price) roomPrice 
		FROM t_order_room a 
		JOIN t_order b ON a.order_id = b.id 
		JOIN t_hotel c ON b.hotel_id = c.id 
		WHERE b.pay_status = 1 AND a.mark_modified = 0 AND c.shop_id = #{shopId} AND c.bus_id = #{busId} 
		GROUP BY DATE_FORMAT(b.pay_time, '%Y-%m-%d');
	</select>
</mapper>
