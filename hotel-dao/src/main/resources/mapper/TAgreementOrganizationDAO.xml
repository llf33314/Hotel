<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gt.hotel.dao.TAgreementOrganizationDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.gt.hotel.entity.TAgreementOrganization">
		<id column="id" property="id" />
		<result column="hotel_id" property="hotelId" />
		<result column="name" property="name" />
		<result column="contact" property="contact" />
		<result column="phone" property="phone" />
		<result column="tel" property="tel" />
		<result column="contract_num" property="contractNum" />
		<result column="remark" property="remark" />
		<result column="module" property="module" />
		<result column="package_id" property="packageId" />
		<result column="status" property="status" />
		<result column="rejected_reason" property="rejectedReason" />
		<result column="mark_modified" property="markModified" />
		<result column="created_by" property="createdBy" />
		<result column="created_at" property="createdAt" />
		<result column="updated_by" property="updatedBy" />
		<result column="updated_at" property="updatedAt" />
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		id, hotel_id, name, contact, phone, tel, contract_num, remark, module,
		package_id, status, rejected_reason, mark_modified, created_by,
		created_at, updated_by, updated_at
	</sql>

	<sql id="Base_Column_List_Vo">
		a.id, a.hotel_id, a.name, a.contact, a.phone, a.tel, a.contract_num,
		a.remark, a.module, a.package_id, a.status, a.rejected_reason,
		a.mark_modified, a.created_by, a.created_at, a.updated_by,
		a.updated_at
	</sql>

	<select id="erpQueryAgreementOrganization" resultType="com.gt.hotel.vo.erp.AgreementOrganizationVo">
		SELECT c.`name` packageName, b.`name` hotelName,
		<include refid="Base_Column_List_Vo"/>
		FROM t_agreement_organization a
		JOIN t_hotel b ON a.hotel_id = b.id
		JOIN t_package c ON c.id = a.package_id 
		WHERE a.mark_modified = 0 
		<if test="hotelId != null">
			AND b.id = #{hotelId}
		</if>
		<if test="param.status != null">
			AND a.`status` = #{param.status} 
		</if>
		<if test="param.id != null">
			AND a.id = #{param.id}
		</if>
		<if test="param.busId != null">
			AND b.bus_id = #{param.busId}
		</if>
		<if test="param.module != null">
			AND a.module = #{param.module}
		</if>
		
	</select>
	
	<resultMap id="ReceivablesVo" type="com.gt.hotel.vo.erp.ReceivablesVo">
        <collection property="customers" select="com.gt.hotel.dao.TAgreementOrganizationDAO.erpQueryReceivablesCustomers" column="{orderId=id}"/>
        <collection property="rooms" select="com.gt.hotel.dao.TAgreementOrganizationDAO.erpQueryReceivablesRoom" column="{orderId=id}"/>
    </resultMap>
	<select id="erpQueryReceivables" resultMap="ReceivablesVo">
		SELECT a.id, a.order_num orderNum, b.customer_name customerName, b.customer_phone customerPhone, a.updated_by operationId, 
			a.real_price realPrice, c.`name`, c.contract_num contractNum, TO_DAYS(b.room_out_time) - TO_DAYS(b.room_in_time) daysStay,
			b.room_in_time roomInTime, b.room_out_time roomOutTime, b.guest_type guestType, b.customer_id_type customerIdType, 
			b.customer_id_card customerIdCard, b.customer_gender customerGender, a.pay_type payType, b.check_standard checkStandard, 
			a.remark, a.receivable_price receivablePrice, b.deposit, b.number roomOrderNum, b.room_price, b.rack_rate rackRate,
			IFNULL((a.fb_discount + a.integral_discount + SUM(d.coupons_discount)), 0) discountedPrice, b.activity_id activityId, 
			a.bill_price billPrice, a.fb, a.integral, a.order_coupons_id orderCouponsId, a.hotel_id hotelId, a.bus_id busId, 
			a.member_id memberId, a.refund_amount refundAmount, a.create_time createTime, b.order_from orderFrom, b.category_name categoryName 
		FROM t_order a 
		JOIN t_order_room b ON a.id = b.order_id 
		JOIN t_agreement_organization c ON b.organization_id = c.id 
		LEFT JOIN t_order_coupons d ON a.id = d.order_id
		WHERE a.hotel_id = #{hotelId} AND a.order_status = 3 
		<if test="param.module != null">
			AND c.module = #{param.module} 
		</if>
		<if test="param.orderFrom != null">
			AND b.order_from = #{param.orderFrom} 
		</if>
		<if test="param.roomInTime != null">
		<if test="param.roomOutTime != null">
			AND (b.room_in_time BETWEEN #{param.roomInTime} AND #{param.roomOutTime})
		</if> 
		</if>
		<if test="param.keyword != null">
			AND (c.`name` LIKE #{param.keyword} OR c.contract_num LIKE #{param.keyword}
				 OR b.customer_name LIKE #{param.keyword} OR b.customer_phone LIKE #{param.keyword} OR a.order_num LIKE #{param.keyword})
		</if>
		GROUP BY a.id 
		ORDER BY a.id DESC 
	</select>
	
	<select id="erpQueryReceivablesCustomers" resultType="com.gt.hotel.vo.erp.ReceivablesCustomersVo">
		SELECT a.`name` customerName, a.phone customerPhone, a.id_type customerIdType, a.id_card customerIdCard 
		FROM t_order_room_customer a 
		WHERE a.order_id = #{orderId}
	</select>
	
	<select id="erpQueryReceivablesRoom" resultType="com.gt.hotel.vo.erp.ReceivablesRoomVo">
		SELECT a.category_name categoryName, a.room_num roomNum, a.category_id categoryId, 
			TO_DAYS(a.room_out_time) - TO_DAYS(a.room_in_time) daysStay, b.remark, a.deposit, 
			a.room_price roomPrice, a.rack_rate rackRate, 
			IF(c.breakfast_enable = 0,c.breakfast_quantity,0) breakfastQuantity
		FROM t_order_room a 
		JOIN t_order b ON a.order_id = b.id 
		JOIN t_room_category c ON a.category_id = c.id 
		WHERE b.id = #{orderId}
	</select>
	
	<select id="erpQueryReceivablesTotalPrice" resultType="Long">
		SELECT SUM(a.real_price) 
		FROM t_order a 
		JOIN t_order_room b ON a.id = b.order_id 
		JOIN t_agreement_organization c ON b.organization_id = c.id 
		WHERE a.hotel_id = #{hotelId} AND a.order_status = 3 AND c.module = #{param.module} 
	</select>
	
</mapper>
